[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Curso de Visualización de Datos con Matplotlib y Seaborn",
    "section": "",
    "text": "Introducción\nAprende a crear gráficas de manera sencilla con Python. Utiliza Matplotlib y Seaborn, dos de sus librerías más usadas en data science, y aplica el gran poder que tienen las visualizaciones en el análisis de datos.",
    "crumbs": [
      "Introducción"
    ]
  },
  {
    "objectID": "matplotlib/01_pyplot.html",
    "href": "matplotlib/01_pyplot.html",
    "title": "1  Pyplot Básico",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\ny = x ** 2\n\n\nplt.plot(x, y)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.plot(x, y, 'r')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.plot(x, y, 'bo')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.plot(x, y, 'rx')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.plot(x, y, 'rs-')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.plot(x, y, 'yD:')\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.hist(x)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.pie(x)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.scatter(x, y)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.boxplot(x)\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pyplot Básico</span>"
    ]
  },
  {
    "objectID": "seaborn/00_seaborn.html",
    "href": "seaborn/00_seaborn.html",
    "title": "9  Seaborn",
    "section": "",
    "text": "9.1 Por qué Seaborn?",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Seaborn</span>"
    ]
  },
  {
    "objectID": "matplotlib/02_subplot.html",
    "href": "matplotlib/02_subplot.html",
    "title": "2  Subplot",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\ny = x ** 2\nx\n\narray([0. , 0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5. ])\n\n\n\nplt.subplot(1, 2, 1)\nplt.plot(x, y, 'r--')\nplt.subplot(1, 2, 2)\nplt.hist(y)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.subplot(1, 2, 1)\nplt.plot(x, y, 'r--')\nplt.plot(y, x, 'b:')\nplt.subplot(1, 2, 2)\nplt.pie(y)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.subplot(2, 1, 1)\nplt.plot(x, y, 'r--')\nplt.plot(y, x, 'b:')\nplt.subplot(2, 1, 2)\nplt.hist(y)\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Subplot</span>"
    ]
  },
  {
    "objectID": "matplotlib/03_orientado_a_objetos.html",
    "href": "matplotlib/03_orientado_a_objetos.html",
    "title": "3  Método orientado a objetos",
    "section": "",
    "text": "3.1 Pyplot",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Método orientado a objetos</span>"
    ]
  },
  {
    "objectID": "matplotlib/04_subplots.html",
    "href": "matplotlib/04_subplots.html",
    "title": "4  Subplots",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\ny = np.sin(x)\n\n\nfig , axes = plt.subplots(nrows=1, ncols=2)\naxes[0].plot(x, y, 'b')\naxes[1].plot(y, x, 'r')\n\n\n\n\n\n\n\n\nDefiniendo previamente la salida de los arrays:\n\nfig , (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nax1.plot(x, y, 'b')\nax2.plot(y, x, 'r')\n\n\n\n\n\n\n\n\n\nfig , axes = plt.subplots(2, 4)\naxes[0,0].plot(x, np.cos(x))\naxes[0,1].plot(x, np.sin(x), 'y')\naxes[0,2].plot(x, np.tan(x), 'r')\naxes[0,3].plot(x, np.cos(x)**2)\n\n\n\n\n\n\n\n\n\nfig , ((ax1, ax2, ax3, ax4), (ax5, ax6, ax7, ax8)) = plt.subplots(2, 4)\nax1.plot(x, np.cos(x))\nax2.plot(x, np.sin(x), 'y')\nax3.plot(x, np.tan(x), 'r')\nax4.plot(x, np.cos(x)**2)\nfig.tight_layout() # mejora la grafica\n\n\n\n\n\n\n\n\n\nfig , ((ax1, ax2, ax3, ax4), (ax5, ax6, ax7, ax8)) = plt.subplots(2, 4, figsize=(8,4))\nax1.plot(x, np.cos(x))\nax2.plot(x, np.sin(x), 'y')\nax3.plot(x, np.tan(x), 'r')\nax4.plot(x, np.cos(x)**2)\nax5.plot(x, np.cos(x))\nax6.plot(x, np.sin(x), 'y')\nax7.plot(x, np.tan(x), 'r')\nax8.plot(x, np.cos(x)**2)\nfig.tight_layout() # mejora la grafica\n\n\n\n\n\n\n\n\nA continuación se muestra un ejemplo realizado por un alumno en los comentarios:\n\nplt.style.use('_mpl-gallery')\n\nfig , axes = plt.subplots(2, 3, constrained_layout=True, figsize=(8,4))\n\n# Funciones\nx = np.linspace(0, 10, 100)\ny = 4 + 2 * np.sin(2 * x)\n# plot\naxes[0,0].title.set_text('Plot')\naxes[0,0].plot(x, y, linewidth=2)\naxes[0,0].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\n# Funciones\nx = 4 + np.random.normal(0, 2, 24)\ny = 4 + np.random.normal(0, 2, len(x))\nsizes = np.random.uniform(15, 80, len(x))\ncolors = np.random.uniform(15, 80, len(x))\n# Scatter\naxes[0,1].title.set_text('Scatter')\naxes[0,1].scatter(x, y, s=sizes, c=colors, vmin=0, vmax=100)\naxes[0,1].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\n# Funciones\nnp.random.seed(3)\nx = 0.5 + np.arange(8)\ny = np.random.uniform(2, 7, len(x))\n# bar, barh\naxes[0,2].title.set_text('Bar')\naxes[0,2].bar(x, y, width=1, edgecolor='white', linewidth=0.7)\naxes[0,2].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\n# Funciones\nnp.random.seed(3)\nx = 0.5 + np.arange(8)\ny = np.random.uniform(2, 7, len(x))\n# stem\naxes[1,0].title.set_text('Stem')\naxes[1,0].stem(x, y)\naxes[1,0].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\n# Funciones\nnp.random.seed(3)\nx = 0.5 + np.arange(8)\ny = np.random.uniform(2, 7, len(x))\n# stem\naxes[1,1].title.set_text('Step')\naxes[1,1].step(x, y, linewidth=2.5)\naxes[1,1].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\n# Funciones\nnp.random.seed(1)\nx = np.linspace(0, 8, 16)\ny1 = 3 + 4*x/8 + np.random.uniform(0.0, 0.5, len(x)) \ny2 = 1 + 2*x/8 + np.random.uniform(0.0, 0.5, len(x)) \n# fill_Between\naxes[1,2].title.set_text('Fill_Between')\naxes[1,2].fill_between(x, y1, y2, alpha=0.5, linewidth=0)\naxes[1,2].plot(x, (y1 + y2) / 2, linewidth=2)\naxes[1,2].set(xlim=(0, 8), xticks=np.arange(1, 8),\n              ylim=(0, 8), yticks=np.arange(1, 8))\n\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Subplots</span>"
    ]
  },
  {
    "objectID": "matplotlib/05_leyendas_etiquetas.html",
    "href": "matplotlib/05_leyendas_etiquetas.html",
    "title": "5  Leyendas, etiquetas, títulos, tamaño",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\ny = np.sin(x)\n\n\nfig, axes = plt.subplots(1, 2, figsize=(5,5))\n\naxes[0].plot(x, y, label='$sin(x)$')\naxes[0].set_title('Relacion X - Y') # Para colocar un titulo a la figura\naxes[0].set_xlabel('X') # Para colocar el nombre al eje x\naxes[0].set_ylabel('Y') # Para cololar el nombre al eje y\naxes[0].legend() # para mostrar los labels definidos arriba\n\naxes[1].plot(y, x)\naxes[1].set_title('Relacion Y - X')\naxes[1].set_xlabel('Y')\naxes[1].set_ylabel('X')\n\nText(0, 0.5, 'X')\n\n\n\n\n\n\n\n\n\nSin el método orientado a objetos\n\nplt.plot(x, y, label='$sin(x)$')\nplt.title('Este es un titulo')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.legend(loc='lower left', bbox_to_anchor=(1,0.9))\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Leyendas, etiquetas, títulos, tamaño</span>"
    ]
  },
  {
    "objectID": "matplotlib/06_Colores_y_estilos.html",
    "href": "matplotlib/06_Colores_y_estilos.html",
    "title": "6  Colores y Estilos",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\n\n\nprint(plt.style.available) # Para ver los diferentes estilos que podemos dar a las gráficas\n\n['Solarize_Light2', '_classic_test_patch', '_mpl-gallery', '_mpl-gallery-nogrid', 'bmh', 'classic', 'dark_background', 'fast', 'fivethirtyeight', 'ggplot', 'grayscale', 'seaborn-v0_8', 'seaborn-v0_8-bright', 'seaborn-v0_8-colorblind', 'seaborn-v0_8-dark', 'seaborn-v0_8-dark-palette', 'seaborn-v0_8-darkgrid', 'seaborn-v0_8-deep', 'seaborn-v0_8-muted', 'seaborn-v0_8-notebook', 'seaborn-v0_8-paper', 'seaborn-v0_8-pastel', 'seaborn-v0_8-poster', 'seaborn-v0_8-talk', 'seaborn-v0_8-ticks', 'seaborn-v0_8-white', 'seaborn-v0_8-whitegrid', 'tableau-colorblind10']\n\n\n\n#plt.style.use('bmh') # seleccionamos un estilo para la gráfica\nplt.style.use('dark_background') # \n\n\nfig, ax = plt.subplots(figsize=(8, 8))\n\nax.plot(x, x+1, 'r--')\nax.plot(x, x+2, 'b-')\nax.plot(x, x+3, 'y.-')\nax.plot(x, x+4, 'go:')\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(8, 8))\n\nax.plot(x, x+1, color='green', alpha=0.8, linewidth=5, linestyle='-', marker='o', markersize=10,\n        markerfacecolor='#CCFFCC')\nax.plot(x, x+2, color='blue', linewidth=8, linestyle='--', marker='x')\nax.plot(x, x+3, color='#66FF66', linewidth=3, linestyle='dashed', marker='v')\nax.plot(x, x+4, color='#CCFFCC', linewidth=2, linestyle=':', marker='p')\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Colores y Estilos</span>"
    ]
  },
  {
    "objectID": "matplotlib/07_Bar_plot.html",
    "href": "matplotlib/07_Bar_plot.html",
    "title": "7  Bar Plot",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\n\n\ncountry = ['INDIA', 'JAPAN', 'MEXICO', 'COLOMBIA', 'GERMANY']\npopulation = [1000, 800, 900, 1000, 300]\n\nBarras verticales\n\nplt.bar(country, population, width=0.5, color=['red', 'blue']) # width para ancho de columnas\nplt.xticks(np.arange(5), ('India', 'Japon', 'Mexico', 'Colombia', 'Alemania'), rotation=45)\nplt.show()\n\n\n\n\n\n\n\n\nBarras Horizontales\n\nplt.barh(country, population)\nplt.show()\n\n\n\n\n\n\n\n\nReto\n\nplt.bar(country, population, width=0.5, color='cyan') # width para ancho de columnas\nplt.xticks(np.arange(5), ('India', 'Japon', 'Mexico', 'Colombia', 'Alemania'))\nplt.title('Gráfico de barras de población')\nplt.xlabel('Países')\nplt.ylabel('Población')\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Bar Plot</span>"
    ]
  },
  {
    "objectID": "matplotlib/08_Otros_graficos.html",
    "href": "matplotlib/08_Otros_graficos.html",
    "title": "8  Otros Gráficos",
    "section": "",
    "text": "8.1 Histograma\nplt.hist(data, bins=10, histtype='bar')\nplt.show()\nplt.hist(data, bins=10, histtype='step')\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Otros Gráficos</span>"
    ]
  },
  {
    "objectID": "matplotlib/08_Otros_graficos.html#boxplot",
    "href": "matplotlib/08_Otros_graficos.html#boxplot",
    "title": "8  Otros Gráficos",
    "section": "8.2 Boxplot",
    "text": "8.2 Boxplot\n\nplt.boxplot(data, vert=False, patch_artist=True, notch=True)\nplt.show()\n\n\n\n\n\n\n\n\n\noutliers = [75, 100, 150, 200]\ndata = np.append(data, outliers)\nplt.boxplot(data, vert=False, patch_artist=True, notch=True, showfliers=True)\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Otros Gráficos</span>"
    ]
  },
  {
    "objectID": "matplotlib/08_Otros_graficos.html#scatter",
    "href": "matplotlib/08_Otros_graficos.html#scatter",
    "title": "8  Otros Gráficos",
    "section": "8.3 Scatter",
    "text": "8.3 Scatter\n\nN = 50\nx = np.random.rand(N)\ny = np.random.rand(N)\narea = (30 * np.random.rand(N)) ** 2\ncolors = np.random.rand(N)\n\n\nplt.scatter(x, y, s=area, c=colors, marker='o', alpha=0.5)\nplt.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Otros Gráficos</span>"
    ]
  },
  {
    "objectID": "seaborn/01_set.html",
    "href": "seaborn/01_set.html",
    "title": "10  Set",
    "section": "",
    "text": "Sirve para configurar en las gráficas el estilo, paleta de colores, tipo de fuente, etc.\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nsns.barplot(x=['A', 'B', 'C'], y=[1, 3, 2])\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.set_theme(style='dark', palette='dark', font='Verdana', font_scale=1)\nsns.barplot(x=['A', 'B', 'C'], y=[1, 3, 2])\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Set</span>"
    ]
  },
  {
    "objectID": "seaborn/02_parametros.html",
    "href": "seaborn/02_parametros.html",
    "title": "11  Parámetros más usados",
    "section": "",
    "text": "import seaborn as sns\nimport matplotlib.pyplot as plt\n\nEl seguiente comando muestra los datasets a los que se pueden acceder a traves de seaborn:\n\nsns.get_dataset_names()\n\n['anagrams',\n 'anscombe',\n 'attention',\n 'brain_networks',\n 'car_crashes',\n 'diamonds',\n 'dots',\n 'dowjones',\n 'exercise',\n 'flights',\n 'fmri',\n 'geyser',\n 'glue',\n 'healthexp',\n 'iris',\n 'mpg',\n 'penguins',\n 'planets',\n 'seaice',\n 'taxis',\n 'tips',\n 'titanic']\n\n\n\ntips = sns.load_dataset('tips')\ntips\n\n\n\n\n\n\n\n\ntotal_bill\ntip\nsex\nsmoker\nday\ntime\nsize\n\n\n\n\n0\n16.99\n1.01\nFemale\nNo\nSun\nDinner\n2\n\n\n1\n10.34\n1.66\nMale\nNo\nSun\nDinner\n3\n\n\n2\n21.01\n3.50\nMale\nNo\nSun\nDinner\n3\n\n\n3\n23.68\n3.31\nMale\nNo\nSun\nDinner\n2\n\n\n4\n24.59\n3.61\nFemale\nNo\nSun\nDinner\n4\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n239\n29.03\n5.92\nMale\nNo\nSat\nDinner\n3\n\n\n240\n27.18\n2.00\nFemale\nYes\nSat\nDinner\n2\n\n\n241\n22.67\n2.00\nMale\nYes\nSat\nDinner\n2\n\n\n242\n17.82\n1.75\nMale\nNo\nSat\nDinner\n2\n\n\n243\n18.78\n3.00\nFemale\nNo\nThur\nDinner\n2\n\n\n\n\n244 rows × 7 columns\n\n\n\n\nsns.displot(data=tips, x='total_bill')\nplt.show()\n\n\n\n\n\n\n\n\nGráfico cuando se relacionan dos variables:\n\nsns.displot(data=tips, x='total_bill', y='tip')\nplt.show()\n\n\n\n\n\n\n\n\nSe puede segregar por una variable categórica:\n\nsns.displot(data=tips, x='total_bill', y='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\nSe puede realizar también con una solo variable numérica:\n\nsns.displot(data=tips, x='total_bill', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\nUso del parámetro kind:\n\nsns.displot(data=tips, x='total_bill', hue='sex', kind='kde')\nplt.show()\n\n\n\n\n\n\n\n\nTAmbién podemos retirar la leyenda del gráfico con el parámetro legend:\n\nsns.displot(data=tips, x='total_bill', hue='sex', kind='kde', legend=False)\nplt.show()\n\n\n\n\n\n\n\n\nSe puede especificar una paleta de colores específica:\n\nsns.displot(data=tips, x='total_bill', hue='sex', kind='kde', \n            legend=True, palette='dark')\nplt.show()\n\n\n\n\n\n\n\n\nSi quiero manejar transparencias, utilizo el parámetro alpha:\n\nsns.displot(data=tips, x='total_bill', hue='sex', kind='kde', \n            legend=True, palette='dark', alpha=0.25)\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Parámetros más usados</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html",
    "href": "seaborn/03_Distribuciones.html",
    "title": "12  Distribuiciones",
    "section": "",
    "text": "12.1 Gráfico de Histograma\nsns.histplot(data=tips, x='tip')\nplt.show()\nSe puede seleccionar la agrupacion de las barras con bins:\nsns.histplot(data=tips, x='tip', bins=15)\nplt.show()\nSe puede graficar de forma acumulativa:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=True)\nplt.show()\nClasificación por variable categórica:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=False, hue='sex')\nplt.show()\nSe puede ajustar con estadisticas como la frecuencia en lugar del conteo:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=False, hue='sex', stat='frequency')\nplt.show()\nEstadística de probabilidad:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=False, hue='sex', stat='probability')\nplt.show()\nEstadísitica por porcentaje:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=False, hue='sex', stat='percent')\nplt.show()\nUtilizamos el parámetro multiple:\nsns.histplot(data=tips, x='tip', bins=15, cumulative=False, hue='sex', stat='count', \n             multiple='dodge')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#gráfico-de-histograma",
    "href": "seaborn/03_Distribuciones.html#gráfico-de-histograma",
    "title": "12  Distribuiciones",
    "section": "",
    "text": "stack\nlayer\ndodge\nfill",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#section",
    "href": "seaborn/03_Distribuciones.html#section",
    "title": "12  Distribuiciones",
    "section": "12.2 ",
    "text": "12.2",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#gráfico-de-densidad",
    "href": "seaborn/03_Distribuciones.html#gráfico-de-densidad",
    "title": "12  Distribuiciones",
    "section": "12.2 Gráfico de Densidad",
    "text": "12.2 Gráfico de Densidad\n\nsns.kdeplot(data=tips, x='tip', hue='sex')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-de-densidad",
    "href": "seaborn/03_Distribuciones.html#diagrama-de-densidad",
    "title": "12  Distribuiciones",
    "section": "12.2 Diagrama de Densidad",
    "text": "12.2 Diagrama de Densidad\n\nsns.kdeplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\nSe puede ver el parámetro cumulative:\n\nsns.kdeplot(data=tips, x='tip', hue='sex', cumulative=True)\nplt.show()\n\n\n\n\n\n\n\n\nPara dibujar el área bajo la curva usamos el parámetro fill:\n\nsns.kdeplot(data=tips, x='tip', hue='sex', cumulative=False, \n            fill=True) # shade=True deprecated\nplt.show()\n\n\n\n\n\n\n\n\nSe puede usar el parámetro bw_adjust para ajustar\n\nsns.kdeplot(data=tips, x='tip', hue='sex', cumulative=False, \n            fill=True, bw_adjust=1) \nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#di",
    "href": "seaborn/03_Distribuciones.html#di",
    "title": "12  Distribuiciones",
    "section": "12.3 Di",
    "text": "12.3 Di",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-ec",
    "href": "seaborn/03_Distribuciones.html#diagrama-ec",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama EC",
    "text": "12.3 Diagrama EC",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-ecdfplot",
    "href": "seaborn/03_Distribuciones.html#diagrama-ecdfplot",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama ECDFPLOT",
    "text": "12.3 Diagrama ECDFPLOT\n\nsns.ecdfplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.ecdfplot(data=tips, x='tip', hue='sex', stat='count')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagramas-de-distribución",
    "href": "seaborn/03_Distribuciones.html#diagramas-de-distribución",
    "title": "12  Distribuiciones",
    "section": "12.4 Diagramas de distribución",
    "text": "12.4 Diagramas de distribución\n\nsns.displot(data=tips, x='tip', hue='sex', kind='hist', multiple='stack')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/00_seaborn.html#por-qué-seaborn",
    "href": "seaborn/00_seaborn.html#por-qué-seaborn",
    "title": "9  Seaborn",
    "section": "",
    "text": "Velocidad\nPoco código\nCustomizable",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Seaborn</span>"
    ]
  },
  {
    "objectID": "seaborn/00_seaborn.html#estructura-básica",
    "href": "seaborn/00_seaborn.html#estructura-básica",
    "title": "9  Seaborn",
    "section": "9.2 Estructura básica",
    "text": "9.2 Estructura básica\nsns.\"Tipo de gráfica\"(\n    data=\"Dataset,\n    x=\"Data en el eje x\",\n    y=\"Data en el eje y\",\n    hue=\"Variable de agrupamiento\"\n)\n\n\n\nimage.png",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Seaborn</span>"
    ]
  },
  {
    "objectID": "matplotlib/03_orientado_a_objetos.html#pyplot",
    "href": "matplotlib/03_orientado_a_objetos.html#pyplot",
    "title": "3  Método orientado a objetos",
    "section": "",
    "text": "Rápido\nFácil\nUna sola figura",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Método orientado a objetos</span>"
    ]
  },
  {
    "objectID": "matplotlib/03_orientado_a_objetos.html#orientado-a-objetos",
    "href": "matplotlib/03_orientado_a_objetos.html#orientado-a-objetos",
    "title": "3  Método orientado a objetos",
    "section": "3.2 Orientado a objetos",
    "text": "3.2 Orientado a objetos\n\nMayor personalización\nMás código\nMás amigable a múltiples diagramas\n\nUn objeto define una figura, esa figura es un lienzo en el cual podemos introducri diferenctes gráficas(axes), de las cuales cada una posee sus propios ejes (axis).\nLa figura representa el todo, dentro de ella vamos a configurara gráficas las cuales conteine diferentes ejes.\n\n\n\nimage.png\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\nx = np.linspace(0, 5, 11)\ny = x ** 2\n\n\n3.2.1 Método orientado a objetos\n\nfig = plt.figure()\naxes = fig.add_axes([0.1, 0.1, 0.5, 0.9])\naxes.plot(x, y, 'b')\nfig.show()\n\nC:\\Users\\Edwin Reyes\\AppData\\Local\\Temp\\ipykernel_24528\\2545703584.py:4: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n\n\n\n\n\n\n\n\n\nEsta forma me da ventajas cuando quiero hacer algo más específico.\n\nfig = plt.figure()\naxes = fig.add_axes([0.1, 0.1, 0.8, 0.9]) # [ubicacion ubicacion tamaño tamaño]\naxes2 = fig.add_axes([0.2, 0.55, 0.4, 0.3])\n\naxes.plot(x, y, 'b')\naxes2.plot(y, x, 'r')\nfig.show()\n\nC:\\Users\\Edwin Reyes\\AppData\\Local\\Temp\\ipykernel_24528\\1999792158.py:7: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()\n\n\n\n\n\n\n\n\n\n\nfig = plt.figure()\naxes = fig.add_axes([0.1, 0.1, 0.8, 0.9])\naxes2 = fig.add_axes([0.2, 0.55, 0.4, 0.3])\n\naxes.plot(x, y, 'b')\naxes2.plot(y, x, 'r')\naxes2.set_facecolor('gray')\nfig.show()\n\nC:\\Users\\Edwin Reyes\\AppData\\Local\\Temp\\ipykernel_24528\\1237668884.py:8: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown\n  fig.show()",
    "crumbs": [
      "Matplotlib",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Método orientado a objetos</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-de",
    "href": "seaborn/03_Distribuciones.html#diagrama-de",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama de",
    "text": "12.3 Diagrama de\n\nsns.ecdfplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.ecdfplot(data=tips, x='tip', hue='sex', stat='count')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-de-acumulaci",
    "href": "seaborn/03_Distribuciones.html#diagrama-de-acumulaci",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama de Acumulaci",
    "text": "12.3 Diagrama de Acumulaci\n\nsns.ecdfplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.ecdfplot(data=tips, x='tip', hue='sex', stat='count')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-de-acumulacion",
    "href": "seaborn/03_Distribuciones.html#diagrama-de-acumulacion",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama de Acumulacion",
    "text": "12.3 Diagrama de Acumulacion\n\nsns.ecdfplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.ecdfplot(data=tips, x='tip', hue='sex', stat='count')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/03_Distribuciones.html#diagrama-de-acumulación",
    "href": "seaborn/03_Distribuciones.html#diagrama-de-acumulación",
    "title": "12  Distribuiciones",
    "section": "12.3 Diagrama de Acumulación",
    "text": "12.3 Diagrama de Acumulación\n\nsns.ecdfplot(data=tips, x='tip', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.ecdfplot(data=tips, x='tip', hue='sex', stat='count')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Distribuiciones</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html",
    "href": "seaborn/04_Categoricos.html",
    "title": "13  Categóricos",
    "section": "",
    "text": "13.1 Countplot\nsns.countplot(data=tips, x='day', hue='sex')\nplt.show()\nsns.countplot(data=tips, y='day', hue='sex')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html#stripplot",
    "href": "seaborn/04_Categoricos.html#stripplot",
    "title": "13  Categóricos",
    "section": "13.2 Stripplot",
    "text": "13.2 Stripplot\n\nsns.stripplot(data=tips, x='day', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.stripplot(data=tips, x='day', y='total_bill', hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.stripplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nplt.show()\n\n\n\n\n\n\n\n\nTambién se puede modificar su tamaño\n\nplt.figure(figsize=(6, 6))\nsns.stripplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html#swarmplot",
    "href": "seaborn/04_Categoricos.html#swarmplot",
    "title": "13  Categóricos",
    "section": "13.3 Swarmplot",
    "text": "13.3 Swarmplot\nUna mejor forma de ver la concentración de los datos\n\nplt.figure(figsize=(6, 6))\nsns.swarmplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html#boxplot",
    "href": "seaborn/04_Categoricos.html#boxplot",
    "title": "13  Categóricos",
    "section": "13.4 Boxplot",
    "text": "13.4 Boxplot\nDistribución estadística por cuartiles\n\nplt.figure(figsize=(6, 6))\nsns.boxplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nplt.show()\n\n\n\n\n\n\n\n\nTambién se puede combinar con otro tipo de gráfico. A continuación se muestra la combinación del boxplot con el swarmplot\n\nplt.figure(figsize=(6, 6))\nsns.boxplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nsns.swarmplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True, \n              palette='dark:0', marker='&lt;')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html#violinplot",
    "href": "seaborn/04_Categoricos.html#violinplot",
    "title": "13  Categóricos",
    "section": "13.5 Violinplot",
    "text": "13.5 Violinplot\n\nplt.figure(figsize=(6, 6))\nsns.violinplot(data=tips, x='day', y='total_bill', hue='sex', palette='pastel')\nplt.show()\n\n\n\n\n\n\n\n\nPara combinarlos en un solo gráfico se puede usar el parámetro split\n\nplt.figure(figsize=(6, 6))\nsns.violinplot(data=tips, x='day', y='total_bill', hue='sex', split=True, palette='pastel')\nplt.show()\n\n\n\n\n\n\n\n\nPuede ser usado solo para variables numéricas\n\nsns.violinplot(data=tips, y='total_bill')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/04_Categoricos.html#catplot",
    "href": "seaborn/04_Categoricos.html#catplot",
    "title": "13  Categóricos",
    "section": "13.6 Catplot",
    "text": "13.6 Catplot\n\nsns.catplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True)\nplt.show()\n\n\n\n\n\n\n\n\nPodemos cambiar el gráfico, modificando el parámetro kind\n\nsns.catplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True, kind='swarm')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.catplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True, kind='box')\nplt.show()\n\n\n\n\n\n\n\n\nPuedo tambier graficar en columnas con el parámetro col\n\nsns.catplot(data=tips, x='day', y='total_bill', hue='sex', dodge=True, kind='box', col='time')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Categóricos</span>"
    ]
  },
  {
    "objectID": "seaborn/05_Relation.html",
    "href": "seaborn/05_Relation.html",
    "title": "14  Relación",
    "section": "",
    "text": "14.1 Scatterplot\nsns.scatterplot(data=tips, x='total_bill', y='tip');\nSe puede segmentar con el parámetro hue:\nsns.scatterplot(data=tips, x='total_bill', y='tip', hue='day');\nPodemos usar otra categoria con el parámetro style\nsns.scatterplot(data=tips, x='total_bill', y='tip', hue='day', style='time')\nplt.show()\nSe puede usar el parámetro size para tener en la gráfica el número de comensales\nsns.scatterplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size')\nplt.show()\nSe puede modificar la ubicación de la leyenda\nsns.scatterplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size')\nplt.legend(loc='center', bbox_to_anchor=(1.12,0.5))\nplt.show()\nTambién se pueden predefinir los marcadores con el parámetro markers\nplt.figure(figsize=(8, 8))\nmarkers= {'Lunch':'D', 'Dinner':'s'}\nsns.scatterplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size',\n                markers=markers)\nplt.legend(loc='center', bbox_to_anchor=(1.12,0.5))\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Relación</span>"
    ]
  },
  {
    "objectID": "seaborn/05_Relation.html#lineplot",
    "href": "seaborn/05_Relation.html#lineplot",
    "title": "14  Relación",
    "section": "14.2 Lineplot",
    "text": "14.2 Lineplot\n\nsns.lineplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size')\nplt.legend(loc='center', bbox_to_anchor=(1.12,0.5))\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Relación</span>"
    ]
  },
  {
    "objectID": "seaborn/05_Relation.html#relplot",
    "href": "seaborn/05_Relation.html#relplot",
    "title": "14  Relación",
    "section": "14.3 Relplot",
    "text": "14.3 Relplot\n\nsns.relplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.relplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size', kind='line')\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.relplot(data=tips, x='total_bill', y='tip', hue='day', style='time', size='size', kind='scatter', col='time')\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Relación</span>"
    ]
  },
  {
    "objectID": "seaborn/06_Joinplot_y_pairplot.html",
    "href": "seaborn/06_Joinplot_y_pairplot.html",
    "title": "15  Joinplot y Pairplot",
    "section": "",
    "text": "15.1 Joinplot\nUne dos distintas gráficas en usa sola, para análisis. Un diagrama de dispersión y una distribución.\nsns.jointplot(data=tips, x='total_bill', y='tip')\nplt.show()\nsns.jointplot(data=tips, x='total_bill', y='tip', hue='sex')\nplt.show()\nSe puede usar el parámetro kind para diferentes gráficos\nsns.jointplot(data=tips, x='total_bill', y='tip', hue='sex', kind='hist')\nplt.show()\nsns.jointplot(data=tips, x='total_bill', y='tip', hue='sex', kind='kde')\nplt.show()\nsns.jointplot(data=tips, x='total_bill', y='tip', hue='sex', kind='hist', marginal_ticks=True)\nplt.show()\nsns.jointplot(data=tips, x='total_bill', y='tip', hue='sex', kind='hist', marginal_ticks=True,\n              marginal_kws=dict(bins=25, fill=False, multiple='dodge'))\nplt.show()",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Joinplot y Pairplot</span>"
    ]
  },
  {
    "objectID": "seaborn/06_Joinplot_y_pairplot.html#pairplot",
    "href": "seaborn/06_Joinplot_y_pairplot.html#pairplot",
    "title": "15  Joinplot y Pairplot",
    "section": "15.2 Pairplot",
    "text": "15.2 Pairplot\nSe usa para encontrar relaciones de variables numéricas\n\nsns.pairplot(data=tips)\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.pairplot(data=tips, hue='sex')\nplt.show()\n\n\n\n\n\n\n\n\nPuede usarse el parámetro palette para escoger un color diferente\n\nsns.pairplot(data=tips, hue='sex', palette='coolwarm')\nplt.show()\n\n\n\n\n\n\n\n\nPuede usarse el parámetro corner para evitar que se dupliquen los gráficos\n\nsns.pairplot(data=tips, hue='sex', corner=True)\nplt.show()\n\n\n\n\n\n\n\n\n\nsns.pairplot(data=tips, hue='sex', corner=True, kind='scatter')\nplt.show()\n\n\n\n\n\n\n\n\nLas gráficas generadas con joinploty pairplot son útiles para dar una mirada rápida a un conjunto de datos.",
    "crumbs": [
      "Seaborn",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Joinplot y Pairplot</span>"
    ]
  }
]